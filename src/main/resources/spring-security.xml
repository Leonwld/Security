<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.0.xsd">



    <security:global-method-security secured-annotations="enabled" jsr250-annotations="enabled" pre-post-annotations="enabled"/>


    <security:http>
        <security:intercept-url pattern="/user/login" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:form-login  default-target-url="/user/login" />

        <security:custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR"/>  <!-- 自定义FILTER ,FilterSecurityInterceptor 负责授权-->
    </security:http>
    <bean id = "managerDetailService" class = "com.eluyun.mg.interceptor.ManagerDetailServiceInterceptor"></bean>


    <!--<security:authentication-manager alias="authenticationManager">-->
        <!--<security:authentication-provider  user-service-ref="managerDetailService">-->

        <!--</security:authentication-provider>-->

    <!--</security:authentication-manager>-->



    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider
                ref="authenticationProvider" >
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="managerDetailService" />
        <property name="hideUserNotFoundExceptions" value="false" />
    </bean>



    <bean id="" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder">
    </bean>


    <bean id="loginLogAuthenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
        <property name="defaultTargetUrl" value="/"></property>
    </bean>
    <bean id="simpleUrlAuthenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
        <property name="defaultFailureUrl" value="/login.jsp?login_error=true"></property>
    </bean>

    <bean id = "myFilter" class = "com.eluyun.mg.interceptor.MyFilterSecurityInterceptor">
        <property name="authenticationManager" ref ="authenticationManager"></property>  <!-- 登陆验证 ，验证你的用户名密码噼里啪啦-->
        <property name="securityMetadataSource" ref = "securityMetadataSource"></property>  <!-- 资源数据源的定义 ，神马权限对应神马资源 噼里啪啦-->
        <property name="accessDecisionManager" ref="myAccessDecisionManagerBean"></property>  <!-- 访问决策 有没有权限访问资源 噼里啪啦-->
    </bean>

    <bean id = "myAccessDecisionManagerBean" class = "com.eluyun.mg.interceptor.MyAccessDecisionManager"></bean>

    <!-- 资源数据源的定义 什么资源对应什么权限，或者什么资源能被什么角色访问-->
    <bean id = "securityMetadataSource" class = "com.eluyun.mg.interceptor.MyInvocationSecurityMetadataSource"></bean>

</beans>